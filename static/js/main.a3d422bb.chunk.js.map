{"version":3,"sources":["../../react_appointments/src/actions/index.js","../../react_appointments/src/appointment-dialog/appointment-form/AppointmentForm.js","../../react_appointments/src/appointment-dialog/AppointmentDialog.js","../../react_appointments/src/appointment-options/AppointmentOptions.js","../../react_appointments/src/App.js","../../react_appointments/src/reducers/timeSlots.js","../../react_appointments/src/index.js"],"names":["updateTimeSlot","createAction","AppointmentForm","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","phoneRegex","state","updatedTimeSlot","objectSpread","timeSlot","validation","name","valid","message","phone","inherits","createClass","key","value","event","target","phoneValid","test","setState","nameValid","_this$state","submitForm","closeDialog","_this$state$updatedTi","time","react_default","a","createElement","Fragment","className","Classes","DIALOG_BODY","formGroup","label","inputGroup","type","readOnly","helperText","intent","Intent","PRIMARY","DANGER","id","onChange","handleNameChange","bind","handlePhoneChange","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","buttons","disabled","submitDisabled","onClick","submitFormAndCloseDialog","Component","connect","AppointmentDialog","_ref","isOpen","dialog","title","onClose","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","usePortal","appointment_form_AppointmentForm","timeSlots","openDialog","buttonGroup","vertical","large","fill","map","timeSlotTaken","App","dialogOpen","src_appointment_options_AppointmentOptions","appointment_dialog_AppointmentDialog","createReducer","UPDATE_TIME_SLOT","action","payload","store","configureStore","reducer","timeSlotsReducer","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a3d422bb.chunk.js","sourcesContent":["import { createAction } from 'redux-starter-kit';\n\nexport const updateTimeSlot = createAction('UPDATE_TIME_SLOT');\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Classes,\n  FormGroup,\n  InputGroup,\n  Button,\n  Intent\n} from '@blueprintjs/core';\nimport { updateTimeSlot } from '../../actions';\nimport PropTypes from 'prop-types';\n\nexport class AppointmentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updatedTimeSlot: { ...props.timeSlot },\n      validation: {\n        name: {\n          valid: true,\n          message: 'The name must not be empty'\n        },\n        phone: {\n          valid: true,\n          message: 'The phone number must be in the format: 999-999-9999'\n        }\n      }\n    };\n  }\n\n  phoneRegex = /^\\d{3}-\\d{3}-\\d{4}$/;\n\n  handlePhoneChange(event) {\n    const phone = event.target.value;\n    const phoneValid = this.phoneRegex.test(phone);\n    this.setState({\n      validation: {\n        ...this.state.validation,\n        phone: {\n          ...this.state.validation.phone,\n          valid: phoneValid\n        }\n      },\n      updatedTimeSlot: {\n        ...this.state.updatedTimeSlot,\n        phone: event.target.value\n      }\n    });\n  }\n\n  handleNameChange(event) {\n    const name = event.target.value;\n    const nameValid = !!name;\n    this.setState({\n      validation: {\n        ...this.state.validation,\n        name: {\n          ...this.state.validation.name,\n          valid: nameValid\n        }\n      },\n      updatedTimeSlot: {\n        ...this.state.updatedTimeSlot,\n        name: event.target.value\n      }\n    });\n  }\n\n  submitDisabled() {\n    const { validation, updatedTimeSlot } = this.state;\n    return !(\n      updatedTimeSlot.name &&\n      updatedTimeSlot.phone &&\n      validation.name.valid &&\n      validation.phone.valid\n    );\n  }\n\n  submitFormAndCloseDialog() {\n    this.props.submitForm(this.state.updatedTimeSlot);\n    this.props.closeDialog();\n  }\n\n  render() {\n    const { time, name, phone } = this.state.updatedTimeSlot;\n    const validation = this.state.validation;\n    return (\n      <>\n        <div className={Classes.DIALOG_BODY}>\n          <FormGroup label=\"Time\">\n            <InputGroup type=\"text\" value={time} readOnly />\n          </FormGroup>\n          <FormGroup\n            label=\"Name\"\n            helperText={!validation.name.valid && validation.name.message}\n            intent={validation.name.valid ? Intent.PRIMARY : Intent.DANGER}\n          >\n            <InputGroup\n              id=\"name-input\"\n              type=\"text\"\n              onChange={this.handleNameChange.bind(this)}\n              value={name || ''}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"Phone\"\n            helperText={\n              (!validation.phone.valid && validation.phone.message) || ''\n            }\n            intent={validation.phone.valid ? Intent.PRIMARY : Intent.DANGER}\n          >\n            <InputGroup\n              id=\"phone-input\"\n              type=\"text\"\n              onChange={this.handlePhoneChange.bind(this)}\n              value={phone || ''}\n            />\n          </FormGroup>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button\n              disabled={this.submitDisabled()}\n              intent={Intent.PRIMARY}\n              onClick={this.submitFormAndCloseDialog.bind(this)}\n            >\n              Submit\n            </Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nAppointmentForm.propTypes = {\n  timeSlot: PropTypes.object.isRequired,\n  submitForm: PropTypes.func.isRequired,\n  closeDialog: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  {submitForm: updateTimeSlot}\n)(AppointmentForm);\n","import React from 'react';\nimport { Dialog } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport AppointmentForm from './appointment-form/AppointmentForm';\n\nconst AppointmentDialog = ({ isOpen, closeDialog, timeSlot }) => {\n  return (\n    <Dialog\n      title=\"Book an Appointment\"\n      isOpen={isOpen}\n      onClose={closeDialog}\n      autoFocus\n      canEscapeKeyClose\n      canOutsideClickClose\n      enforceFocus\n      usePortal\n    >\n      <AppointmentForm timeSlot={timeSlot} closeDialog={closeDialog} />\n    </Dialog>\n  );\n};\n\nAppointmentDialog.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  closeDialog: PropTypes.func.isRequired,\n  timeSlot: PropTypes.object.isRequired\n};\n\nexport default AppointmentDialog;\n","import React from 'react';\nimport './AppointmentOptions.css';\nimport { ButtonGroup, Button, Intent } from '@blueprintjs/core';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport const AppointmentOptions = ({ openDialog, timeSlots }) => {\n  return (\n    <div className=\"time-slots\">\n      <ButtonGroup vertical large fill>\n        {timeSlots.map(timeSlot => {\n          const timeSlotTaken = timeSlot.name || timeSlot.phone;\n          return (\n            <Button\n              intent={timeSlotTaken ? Intent.DANGER : null}\n              key={timeSlot.time}\n              onClick={() => openDialog(timeSlot)}\n            >\n              {timeSlot.time}\n            </Button>\n          );\n        })}\n      </ButtonGroup>\n    </div>\n  );\n};\n\nAppointmentOptions.propTypes = {\n  openDialog: PropTypes.func.isRequired,\n  timeSlots: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  timeSlots: state.timeSlots\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AppointmentOptions);\n","import React, { Component } from 'react';\nimport './App.css';\nimport AppointmentDialog from './appointment-dialog/AppointmentDialog';\nimport AppointmentOptions from './appointment-options/AppointmentOptions';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dialogOpen: false,\n      timeSlot: null\n    };\n  }\n\n  openDialog(timeSlot) {\n    this.setState({\n      dialogOpen: true,\n      timeSlot\n    });\n  }\n\n  closeDialog() {\n    this.setState({\n      dialogOpen: false,\n      timeSlot: null\n    });\n  }\n\n  render() {\n    const { dialogOpen, timeSlot } = this.state;\n    return (\n      <div className=\"app\">\n        <div className=\"header\">\n          <h1 className=\"bp3-heading\">Appointments</h1>\n        </div>\n        <div className=\"content\">\n          <AppointmentOptions openDialog={this.openDialog.bind(this)} />\n        </div>\n        {timeSlot && (\n          <AppointmentDialog\n            timeSlot={timeSlot}\n            isOpen={dialogOpen}\n            closeDialog={this.closeDialog.bind(this)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { createReducer } from 'redux-starter-kit';\n\nconst initialState = [\n  { time: '9:00am', name: null, phone: null },\n  { time: '10:00am', name: null, phone: null },\n  { time: '11:00am', name: null, phone: null },\n  { time: '12:00pm', name: null, phone: null },\n  { time: '1:00pm', name: null, phone: null },\n  { time: '2:00pm', name: null, phone: null },\n  { time: '3:00pm', name: null, phone: null },\n  { time: '4:00pm', name: null, phone: null },\n  { time: '5:00pm', name: null, phone: null }\n];\n\nconst timeSlots = createReducer(initialState, {\n  'UPDATE_TIME_SLOT': (state, action) => {\n    return state.map(timeSlot => {\n      if (timeSlot.time !== action.payload.time) {\n        return timeSlot;\n      } else {\n        return action.payload;\n      }\n    });\n  }\n});\n\nexport default timeSlots;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { configureStore } from 'redux-starter-kit';\nimport timeSlotsReducer from './reducers/timeSlots';\nimport { Provider } from 'react-redux';\n\nconst store = configureStore({\n  reducer: {\n    timeSlots: timeSlotsReducer\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}